{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#autonomous-drone-landing-on-target","title":"Autonomous drone landing on target","text":"<p>Work-log for Bachelor's Thesis at BUT FIT</p> <p>This thesis focuses on implementing computer vision methods and integrating them into autonomous drone systems.</p> <p>Preparation</p> <ul> <li>Research &amp; Understanding</li> <li> Search for relevant projects and case studies.</li> <li> Read literature on computer vision and autonomous drone landing techniques.</li> <li> Explore core concepts in drone programming and ROS 2 operations.</li> </ul> <p>Environment Setup</p> <ul> <li>Environment Configuration</li> <li> Set up OpenCV for image processing.</li> <li> Install and configure Gazebo, PX4, and ROS 2.</li> <li> Control a virtual drone with Python.</li> <li> Run a basic demo project to verify all components are correctly installed and communicating.</li> </ul> <p>Project Implementation</p> <ul> <li>System Design</li> <li> <p> Propose the main software modules</p> </li> <li> <p>Core Development</p> </li> <li> Display live drone camera feed in Python.</li> <li> Implement ArUco marker recognition in OpenCV.</li> <li> Extract position difference of camera and marker.</li> <li> <p> Develop a control system to guide the drone toward the detected marker.</p> </li> <li> <p>Simulation Testing</p> </li> <li> Test the marker detection and navigation in Gazebo.</li> <li> Adjust algorithms for accuracy, stability, and response time in a simulated environment.</li> </ul> <p>Drone Testing</p> <ul> <li>Preparation for Field Testing</li> <li> Familiarize with legal requirements for drone operation.</li> <li> Conduct initial tests with a simplified landing program on a physical drone to confirm setup.</li> <li> Run the complete software solution on the drone, monitoring performance and troubleshooting.</li> </ul> <p>Author: Ond\u0159ej Bene\u0161</p>"},{"location":"1-existing_projects/","title":"Existing projects","text":"<p>Here are existing projects, which serve as a reference, an overview of existing implementations, and inspiration. </p>"},{"location":"1-existing_projects/#videos","title":"Videos","text":"<p>Autonomous Drone Delivery Autonomous drone landing with QR code detection How to make Automated Delivery Drone - [w/ Pixhawk, Geo-fencing, RTL, Automated Package Delivery] Building a sub 250g Autonomous Drone with Ardupilot and ExpressLRS AirPort Telemetry PX4 Drone Precision Landing Gazebo Simulation Vision based Autonomous Quadrotor Landing on a Moving Platform PRECISION LANDING | with OPENCV and ARUCO Markers | Part 1 </p>"},{"location":"1-existing_projects/#documents","title":"Documents","text":"<p>Target detection using python in OpenCV </p>"},{"location":"2.%20Tools%20%26%20Enviroment/2-tools/","title":"Tools","text":""},{"location":"2.%20Tools%20%26%20Enviroment/2-tools/#opencv","title":"OpenCV","text":"<p>Library for implementing computer vision supporting python, c++, java, ... Documentation</p>"},{"location":"2.%20Tools%20%26%20Enviroment/2-tools/#installation","title":"Installation","text":"<ul> <li>https://opencv.org/get-started/</li> </ul>"},{"location":"2.%20Tools%20%26%20Enviroment/2-tools/#px4","title":"PX4","text":"<p>Tool for programming Pixhawk drones - Integrated with Gazebo simulator - Comparison with ArduPilot</p> <p>PX4 was chosen because of good support on MacOS and integrated gazebo simulator</p>"},{"location":"2.%20Tools%20%26%20Enviroment/2-tools/#installation_1","title":"Installation","text":"<ul> <li>Video guide for MacOS</li> <li>Instalation and run using Gazebo simulator</li> <li>Integration with ROS2</li> </ul>"},{"location":"2.%20Tools%20%26%20Enviroment/2-tools/#run","title":"Run","text":"<pre><code># drone_ws/src\nsource drone_venv/bin/activate\ncd PX4-Autopilot\nmake px4_sitl gz_x500 # starts gazebo simulator as well\n</code></pre> <p>In case of problems with startup, make sure QGroundControl station is running</p>"},{"location":"2.%20Tools%20%26%20Enviroment/2-tools/#gazebo-harmonic","title":"Gazebo Harmonic","text":"<p>Physics simulator supporting drone simulation with PX4 Documentation Installation on mac via Homebrew</p> <pre><code>brew tap osrf/simulation\nbrew install gz-harmonic\n</code></pre>"},{"location":"2.%20Tools%20%26%20Enviroment/2-tools/#ros-2-humble","title":"ROS 2 Humble","text":"<p>Collection of libraries and tools for programming robot systems (including drones) What is ROS? </p> <p>Documentation Mac installation using conda</p>"},{"location":"2.%20Tools%20%26%20Enviroment/2-tools/#run_1","title":"Run","text":"<pre><code>conda activate\nconda activate ros_env\nrviz2 # starting the simulator as an example\n</code></pre>"},{"location":"2.%20Tools%20%26%20Enviroment/2-tools/#qgroundcontrol","title":"QGroundControl","text":"<p>Mission planner and monitoring tool Installation</p>"},{"location":"2.%20Tools%20%26%20Enviroment/2-tools/#mavsdk","title":"MAVSDK","text":"<p>Installation</p>"},{"location":"2.%20Tools%20%26%20Enviroment/2-tools/#running-environment","title":"Running environment","text":""},{"location":"2.%20Tools%20%26%20Enviroment/3-environment/","title":"Running a project","text":""},{"location":"3.%20Computer%20vision/1-markers/","title":"Markers","text":""},{"location":"3.%20Computer%20vision/1-markers/#aruco-markers","title":"ArUcO Markers","text":"<p>Special markers, which are part of the OpenCV library, and in Gazebo (aruco world). They are designed to be easily detectable, and to easily extract orientation from the image. They hold minimal information, which is not necessarily a problem  OpenCV detection tutorial</p>"},{"location":"3.%20Computer%20vision/1-markers/#april-tags","title":"April tags","text":"<p>Designed for easy detection even in bad conditions. Easily recognizable even with low resolution, which enables fast processing. Reference </p> <p>\u201cdesigned to be automatically detected and localized even when it is at very low resolution, unevenly lit, oddly rotated, or tucked away in the corner of an otherwise cluttered image\u201d AprilTag: A robust and flexible visual fiducial system AprilTag 2: Efficient and robust fiducial detection</p>"},{"location":"3.%20Computer%20vision/1-markers/#qr-codes","title":"QR Codes","text":"<p>Usable, but hold unnecessarily amount of data. // TODO OpenCV tutorial</p>"},{"location":"3.%20Computer%20vision/1-markers/#classic-h","title":"Classic H","text":"<p>No implemented functionality to detect it. Therefore if the drone was landing on an H, it would need custom code for detecting it.</p>"},{"location":"3.%20Computer%20vision/1-markers/#nested-tags","title":"Nested tags","text":"<p>Nesting tags is done by printing a smaller tag inside a big one. This is done to improve detection of the landing pad, and increase accuracy, because once the drone can't see most of the tag, it is no longer making adjustments to land more precisely. The smaller tag gives the drone a precise point which it can see until it lands.</p>"},{"location":"3.%20Computer%20vision/2-camera/","title":"Camera","text":""},{"location":"3.%20Computer%20vision/2-camera/#camera-calibration","title":"Camera calibration","text":"<p>Camera calibration overview</p>"},{"location":"3.%20Computer%20vision/2-camera/#distance-determination","title":"Distance determination","text":"<p>Computing distance from image </p>"},{"location":"3.%20Computer%20vision/3-edge_detection/","title":"Contour &amp; edge detection","text":"<p>Contour detection vs edge detection Contour detection using python in OpenCV </p>"},{"location":"4.%20Drone/1-laws/","title":"Laws regarding drone operation","text":"<p>This is an overview of the current laws and procedures required when operating a drone.</p> <p>As of time of writing, the rules of drone operation have been set by the EU. In Czech Republic, they are managed by \u00da\u0159ad pro civiln\u00ed letectv\u00ed (UAC), and an overview of the rules is available at their website, and also on the official government website </p> Schema of required prerequisites for drone operation from 31. 12. 2020"},{"location":"4.%20Drone/1-laws/#open-category","title":"Open category","text":"<p>The \"open\" category of drone operation is divided into three subcategories (A1, A2, A3), each with its own specific requirements for pilot qualifications, operational limitations, and technical standards for drones.  </p> <p>Key points include:</p> <ul> <li>Drones must not violate airspace restrictions. (see DroneView)</li> <li>Flight altitude is limited to a maximum of 120m above ground.</li> <li>The pilot must keep the drone within visual line of sight.</li> <li>Drones must have a maximum take-off weight under 25 kg.</li> <li> <p>The drone must not carry hazardous goods or release materials mid-flight.</p> </li> <li> <p>Drones are classified by weight and speed and fall into into classes (C0 to C4).</p> </li> <li>All drones must be registered, display operator numbers, and adhere to manufacturer guidelines.</li> </ul> Drone classes - vzdusin.cz"},{"location":"4.%20Drone/1-laws/#subcategory-a1","title":"Subcategory A1:","text":"<ul> <li>Designed for light drones under 500g or those below 250g sold before 2023.</li> <li>It allows operation over people but not over gatherings.</li> <li>Registration and online training (certificate A1/A3) are required.</li> </ul>"},{"location":"4.%20Drone/1-laws/#subcategory-a2","title":"Subcategory A2:","text":"<ul> <li>For flights near people with drones weighing 500g\u20132kg.</li> <li>Requires safe distance of (5-50m) from people and low-speed modes in close proximity to people.</li> <li>A1/A3 certificate is required as well as A2 certificate given by UCS</li> </ul>"},{"location":"4.%20Drone/1-laws/#subcategory-a3","title":"Subcategory A3:","text":"<ul> <li>For operations in remote areas away from people, with drones weighing up to 25kg.</li> <li>Pilots must ensure a 150m horizontal distance from populated zones and complete online training (certificate A1/A3).  </li> </ul> Categories overview <p>Official rules available at the UCL website</p>"},{"location":"4.%20Drone/1-laws/#specific-category","title":"Specific category","text":"<p>Drones intended for professional use, typically requiring special permits. DIY drones fall into this category.</p>"},{"location":"4.%20Drone/1-laws/#certified-category","title":"Certified category","text":"<p>Currently a futuristic category, which will include drones designed for transporting people or cargo.</p>"},{"location":"4.%20Drone/1-laws/#useful-links","title":"Useful links","text":"<p>Rules explained by category (by DJI Telink) </p> <p>Unofficial overview of the rules (by DRON PRO) </p> <p>Drone registration (by vzdusin.cz) </p> <p>DroneView AisView </p> DroneView - online map with flight zones"},{"location":"4.%20Drone/2-odometry/","title":"Odometry","text":""},{"location":"4.%20Drone/2-odometry/#kinematics","title":"Kinematics","text":"<p>Kinematics basics</p>"},{"location":"5.%20Project%20design/modules/","title":"Modules","text":"<p>Which modules will the project consist of, and what role will they have?</p>"},{"location":"5.%20Project%20design/modules/#camera-processing-module-for-image-acquisition","title":"Camera processing module for image acquisition.","text":""},{"location":"5.%20Project%20design/modules/#marker-detection-module-using-opencv","title":"Marker detection module using OpenCV.","text":""},{"location":"5.%20Project%20design/modules/#drone-control-interface-for-px4-commands","title":"Drone control interface for PX4 commands.","text":""},{"location":"5.%20Project%20design/modules/#path-planning-and-navigation-to-handle-marker-approach-and-landing","title":"Path planning and navigation to handle marker approach and landing.","text":""}]}